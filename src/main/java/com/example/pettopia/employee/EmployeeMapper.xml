<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pettopia.employee.EmployeeMapper">
	
	<!-- 로그인 -->
	<select id="selectEmployeeInfo" parameterType="String" resultType="com.example.pettopia.vo.Employee">
		SELECT emp_no empNo
			, emp_pw empPw
			, emp_name empName
			, emp_email empEmail
			, emp_status empStatus
			, is_team_leader isTeamLeader
			, dept_code deptCode
			, rank_no rankNo
			, role_name roleName
		FROM employee
		WHERE emp_no = #{empNo}	
	
	</select>

	<!-- addEmployee : 직원 중복 가입 방지 -->
	<select id="selectExistEmployee" parameterType="String" resultType="int" >
		SELECT COUNT(*) AS existEmp
		FROM employee
		WHERE emp_no LIKE #{empNo}
	</select>

	<!-- addEmployee : 직원 정보 등록 -->
	<insert id="insertEmployeeInfo" parameterType="com.example.pettopia.vo.Employee">
	
		<selectKey resultType="String" keyProperty="empNo" order="AFTER">
			SELECT LAST_INSERT_ID()									
		</selectKey>
		INSERT into employee(emp_no, emp_name, emp_pw, emp_email, emp_birth, emp_gender, emp_phone
									, postal_code, basic_address, detail_address, is_team_leader, dept_code
									, rank_no, role_name, hire_date, resignation_date, create_datetime, update_datetime)
		VALUES(#{empNo}, #{empName}, #{empPw}, #{empEmail}, #{empBirth}, #{empGender}, #{empPhone}
				, #{postalCode}, #{basicAddress}, #{detailAddress},  #{isTeamLeader}, #{deptCode}
				, #{rankNo}, #{roleName}, #{hireDate}, #{resignationDate}, now(), now() )
	</insert>

	<!-- employeeList -->
	<select id="selectEmployeeList" resultType="map">
		SELECT e.emp_no AS empNo
				, e.emp_name AS empName
				, CONCAT(ef.file_name,ef.file_ext) AS fileName
				, e.emp_email AS empEmail
				, e.emp_status AS empStatus
				, di.division_name AS divisionName
				, d.dept_name AS deptName
				, r.rank_name AS rankName
				, IFNULL(e.is_team_leader,'N') AS isTeamLeader
				, e.hire_date AS hireDate
		FROM employee e
		JOIN department d ON e.dept_code = d.dept_code
		JOIN division di ON d.division_code = di.division_code
		JOIN `rank` r ON e.rank_no = r.rank_no
		JOIN employee_file ef ON e.emp_no = ef.emp_no
		WHERE e.emp_status NOT IN ('R', 'H')
		ORDER BY divisionName desc
	</select>






</mapper>