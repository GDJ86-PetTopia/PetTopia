<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pettopia.employee.EmployeeMapper">
	
	<!-- 로그인 -->
	<select id="selectEmployeeInfo" parameterType="String" resultType="com.example.pettopia.vo.Employee">
		SELECT emp_no empNo
			, emp_pw empPw
			, emp_name empName
			, emp_email empEmail
			, emp_status empStatus
			, is_team_leader isTeamLeader
			, dept_code deptCode
			, rank_no rankNo
			, role_name roleName
		FROM employee
		WHERE emp_no = #{empNo}	
	
	</select>

	<!-- addEmployee : 직원 중복 가입 방지 -->
	<select id="selectExistEmployee" parameterType="String" resultType="int" >
		SELECT COUNT(*) AS existEmp
		FROM employee
		WHERE emp_no LIKE #{empNo}
	</select>

	<!-- addEmployee : 직원 정보 등록 -->
	<insert id="insertEmployeeInfo" parameterType="com.example.pettopia.vo.Employee">
	
		<selectKey resultType="String" keyProperty="empNo" order="AFTER">
			SELECT LAST_INSERT_ID()									
		</selectKey>
		INSERT into employee(emp_no, emp_name, emp_pw, emp_email, emp_birth, emp_gender, emp_phone
									, postal_code, basic_address, detail_address, is_team_leader, dept_code
									, rank_no, role_name, hire_date, resignation_date, create_datetime, update_datetime)
		VALUES(#{empNo}, #{empName}, #{empPw}, #{empEmail}, #{empBirth}, #{empGender}, #{empPhone}
				, #{postalCode}, #{basicAddress}, #{detailAddress},  #{isTeamLeader}, #{deptCode}
				, #{rankNo}, #{roleName}, #{hireDate}, #{resignationDate}, now(), now() )
	</insert>

	<!-- employeeList -->
	<select id="selectEmployeeList" resultType="map">
		SELECT e.emp_no AS empNo
				, e.emp_name AS empName
				, CONCAT(ef.file_name,ef.file_ext) AS fileName
				, e.emp_email AS empEmail
				, e.emp_status AS empStatus
				, di.division_name AS divisionName
				, d.dept_name AS deptName
				, r.rank_name AS rankName
				, IFNULL(e.is_team_leader,'N') AS isTeamLeader
				, e.hire_date AS hireDate
		FROM employee e
		JOIN department d ON e.dept_code = d.dept_code
		JOIN division di ON d.division_code = di.division_code
		JOIN `rank` r ON e.rank_no = r.rank_no
		JOIN employee_file ef ON e.emp_no = ef.emp_no
		WHERE e.emp_status NOT IN ('R', 'H')
		ORDER BY divisionName desc
	</select>

	<!-- addEmployee : 사번 자동 입력을 위한 마지막 입사 사번 -->
	<select id="selectLatestEmpNo" resultType="String">
		SELECT emp_no AS empNo
		FROM employee
		ORDER BY create_datetime DESC
		LIMIT 1
	</select>

	<!-- sendTempPassword : 입력한 정보와 db 일치 여부 -->
	<select id="selectSimpleEmpInfo" parameterType="com.example.pettopia.vo.Employee" resultType="com.example.pettopia.vo.Employee">
		SELECT emp_no  AS empNo
				, emp_name AS empName
				, emp_email AS empEmail
		FROM employee
		WHERE emp_no LIKE #{empNo}
		AND emp_email LIKE #{empEmail}	
	</select>


	<!-- sendTempPassword : 임시비밀번호 발급 후 db 수정 -->
	<update id="updateEmployee" parameterType="com.example.pettopia.vo.Employee">
	    UPDATE employee
	    <set>
	        <if test="empName != null and empName != ''">
	            emp_name = #{empName},
	        </if>
	
	        <if test="empPw != null and empPw != ''">
	            emp_pw = #{empPw},
	        </if>
	
	        <if test="empEmail != null and empEmail != ''">
	            emp_email = #{empEmail},
	        </if>
	
	        <if test="empBirth != null and empBirth != ''">
	            emp_birth = #{empBirth},
	        </if>
	
	        <if test="empGender != null and empGender != ''">
	            emp_gender = #{empGender},
	        </if>
	
	        <if test="empPhone != null and empPhone != ''">
	            emp_phone = #{empPhone},
	        </if>
	
	        <if test="postalCode != null and postalCode != ''">
	            postal_code = #{postalCode},
	        </if>
	
	        <if test="basicAddress != null and basicAddress != ''">
	            basic_address = #{basicAddress},
	        </if>
	
	        <if test="detailAddress != null and detailAddress != ''">
	            detail_address = #{detailAddress},
	        </if>
	
	        <if test="empStatus != null and empStatus != ''">
	            emp_status = #{empStatus},
	        </if>
	
	        <if test="isTeamLeader != null">
	            is_team_leader = #{isTeamLeader},
	        </if>
	
	        <if test="deptCode != null and deptCode != ''">
	            dept_code = #{deptCode},
	        </if>
	
	        <if test="rankNo != null">
	            rank_no = #{rankNo},
	        </if>
	
	        <if test="roleName != null and roleName != ''">
	            role_name = #{roleName},
	        </if>
	
	        <if test="hireDate != null">
	            hire_date = #{hireDate},
	        </if>
	
	        <if test="resignationDate != null">
	            resignation_date = #{resignationDate},
	        </if>
	
	        update_datetime = now()
	    </set>
	    WHERE emp_no = #{empNo}
	</update>	



</mapper>