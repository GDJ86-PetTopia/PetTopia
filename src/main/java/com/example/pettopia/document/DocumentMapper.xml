<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pettopia.document.DocumentMapper">

	<!-- insertDocument : 문서 작성 -->
	<insert id="insertDocument" parameterType="com.example.pettopia.vo.Document">
		<selectKey resultType="Integer" keyProperty="docNo" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO document(doc_title, doc_writer_no, doc_content, doc_type, doc_purpose, doc_price, doc_remarks, vacation_type, vacation_backup, material_name, material_quantity, resignation_type, start_date, end_date) 
		VALUES(#{docTitle}, #{docWriterNo}, #{docContent}, #{docType}, #{docPurpose}, #{docPrice}, #{docRemarks}, #{vacationType}, #{vacationBackup}, #{materialName}, #{materialQuantity}, #{resignationType}, #{startDate}, #{endDate})
	</insert>
	
	<!-- selectEmployeeDept : 직원 부서 조회 -->
	<select id="selectEmployeeDept" parameterType="String" resultType="Map">
		SELECT d.dept_code deptCode, d.dept_name deptName, dv.division_code divisionCode, dv.division_name divisionName FROM employee e  
		INNER JOIN department d ON e.dept_code = d.dept_code
		INNER JOIN division dv ON d.division_code = dv.division_code
		WHERE e.emp_no = #{empNo}
	</select>
	
	<!-- insertDocumentApprovers : 문서 결재자 추가 -->
	<insert id="insertDocumentApprovers" parameterType="com.example.pettopia.vo.DocumentApprovers">
		INSERT INTO document_approvers(doc_no, init_approver_no, init_approval_status, init_approval_datetime, init_reject_reason
									 , mid_approver_no, mid_approval_status, mid_approval_datetime, mid_reject_reason
									 , final_approver_no, final_approval_status, final_approval_datetime, final_reject_reason)
		VALUES(#{docNo}, #{initApproverNo}, #{initApproverStatus}, #{initApproverDatetime}, #{initRejectReson}
			 , #{midApproverNo}, #{midApproverStatus}, #{midApproverDatetime}, #{midRejectReson}
			 , #{finalApproverNo}, #{finalApproverStatus}, #{finalApproverDatetime}, #{finalRejectReson});
	</insert>
	
	<!-- selectDivisionList : 상위부서 조회(문서) -->
	<select id="selectDivisionListByDocument" resultType="com.example.pettopia.vo.Division">
		SELECT division_code divisionCode, division_name divisionName FROM division ORDER BY divisionName;
	</select>
	
	<!-- selectDivisionListByDocument : 팀 조회(문서) -->
	<select id="selectDeptListByDocument" parameterType="String" resultType="com.example.pettopia.vo.Department">
		SELECT dept_code deptCode, division_code divisionCode, dept_name deptName
		FROM department 
		WHERE division_code = #{divisionCode}
		ORDER BY deptName
	</select>
	
	<!-- selectEmployeeListByDocument : 직원 조회(문서) -->
	<select id="selectEmpListByDocument" parameterType="String" resultType="Map">
		SELECT e.emp_no empNo, e.emp_name empName, e.dept_code deptCode, de.dept_name deptName, di.division_name divisionName, r.rank_name rankName
		FROM employee e 
		INNER JOIN `rank` r ON e.rank_no = r.rank_no
		INNER JOIN department de ON e.dept_code = de.dept_code
		INNER JOIN division di ON de.division_code = di.division_code
		WHERE e.dept_code = #{deptCode}
		ORDER BY e.rank_no DESC
	</select>
	
	<!-- selectEmpSearchByDocument : 직원 검색(문서) -->
	<select id="selectEmpSearchByDocument" parameterType="String" resultType="Map">
		SELECT e.emp_no empNo, e.emp_name empName, e.dept_code deptCode, de.dept_name deptName, di.division_name divisionName, r.rank_name rankName
		FROM employee e 
		INNER JOIN `rank` r ON e.rank_no = r.rank_no
		INNER JOIN department de ON e.dept_code = de.dept_code
		INNER JOIN division di ON de.division_code = di.division_code
		WHERE e.emp_name LIKE CONCAT('%', #{empName}, '%')
		ORDER BY e.rank_no DESC
	</select>
	
	<!-- selectDocumentList : 문서 조회 -->
	<select id="selectDocumentList" parameterType="String" resultType="Map">
    	SELECT d.doc_no docNo, d.doc_title docTitle, d.doc_writer_no docWriterNo, e1.emp_name docWriterName, dp1.dept_name writerDeptName,
    		   d.doc_type docType, d.approval_status approvalStatus, d.doc_bin docBin, d.update_datetime updateDatetime,
			   da.init_approver_no initApproverNo, e2.emp_name initApproversName, dp2.dept_name approversDeptName, da.init_approval_status initApproverStatus, 
			   da.mid_approval_status midApproverStatus, da.final_approval_status finalApproverStatus
		FROM document d
		INNER JOIN document_approvers da ON d.doc_no = da.doc_no
		INNER JOIN employee e1 ON e1.emp_no = d.doc_writer_no
		INNER JOIN employee e2 ON e2.emp_no = da.init_approver_no
		INNER JOIN department dp1 ON e1.dept_code = dp1.dept_code
		INNER JOIN department dp2 ON e2.dept_code = dp2.dept_code
		<where>
	        d.doc_bin = '0'
	        <if test="empNo != null">
	            AND (d.doc_writer_no = #{empNo} OR da.init_approver_no = #{empNo})
	        </if>
	        <if test="docWriterNo != null">
	            AND d.doc_writer_no = #{docWriterNo}
	        </if>
	        <if test="initApproverNo != null">
	            AND da.init_approver_no = #{initApproverNo}
	        </if>
	        <if test="approvalStatus != null">
	            AND d.approval_status = #{approvalStatus}
	        </if>
    	</where>
    	ORDER BY d.update_datetime DESC
	</select>
	
	
	
	
	
	
	
	
</mapper>